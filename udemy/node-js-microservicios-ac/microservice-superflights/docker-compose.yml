# vi docker-compose.yml
version: '3.3'
services:

    app:
        image: app_vuelos:v2
        container_name: app_vuelos
        build:
            context: ./api-gateway
            dockerfile: Dockerfile
        env_file: .env
        ports:
            - 80:3000
        depends_on:
            - mongo
            - rabbitmq
        restart: always
        networks:
            - ms_nestjs

    microservice-passengers:
        image: microservice-passengers:v2
        container_name: microservice-passengers
        build:
            context: ./microservice-passengers
            dockerfile: Dockerfile
        env_file: .env
        depends_on:
            - mongo
            - rabbitmq
        restart: always
        networks:
            - ms_nestjs
    microservice-users:
        image: microservice-users:v2
        container_name: microservice-users
        build:
            context: ./microservice-users
            dockerfile: Dockerfile
        env_file: .env
        depends_on:
            - mongo
            - rabbitmq
        restart: always
        networks:
            - ms_nestjs
    microservice-flights:
        image: microservice-flights:v2
        container_name: microservice-flights
        build:
            context: ./microservice-flights
            dockerfile: Dockerfile
        env_file: .env
        depends_on:
            - mongo
            - rabbitmq
        restart: always
        networks:
            - ms_nestjs

    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rmq
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
            - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
        networks:
            - ms_nestjs
    mongo:
        image: mongo
        ports:
            - '27017:27017'
        container_name: db_mongo
        restart: always
        logging:
            options:
                max-size: 1g
        environment:
            - MONGO_INITDB_ROOT_USERNAME=mongoadmin
            - MONGO_INITDB_ROOT_PASSWORD=admin
        networks:
            - ms_nestjs
        volumes:
            - mongo:/data/db
volumes: 
    mongo:
networks: 
    ms_nestjs:
